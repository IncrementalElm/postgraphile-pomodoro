-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Scalar exposing (Codecs, Datetime(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Datetime
    = Datetime String


defineCodecs :
    { codecDatetime : Codec valueDatetime }
    -> Codecs valueDatetime
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDatetime
    -> { codecDatetime : Codec valueDatetime }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDatetime
    = Codecs (RawCodecs valueDatetime)


type alias RawCodecs valueDatetime =
    { codecDatetime : Codec valueDatetime }


defaultCodecs : RawCodecs Datetime
defaultCodecs =
    { codecDatetime =
        { encoder = \(Datetime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Datetime
        }
    }
