-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.TimerKind exposing (TimerKind(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


type TimerKind
    = Work
    | ShortBreak
    | LongBreak


list : List TimerKind
list =
    [ Work, ShortBreak, LongBreak ]


decoder : Decoder TimerKind
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "WORK" ->
                        Decode.succeed Work

                    "SHORT_BREAK" ->
                        Decode.succeed ShortBreak

                    "LONG_BREAK" ->
                        Decode.succeed LongBreak

                    _ ->
                        Decode.fail ("Invalid TimerKind type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : TimerKind -> String
toString enum =
    case enum of
        Work ->
            "WORK"

        ShortBreak ->
            "SHORT_BREAK"

        LongBreak ->
            "LONG_BREAK"
